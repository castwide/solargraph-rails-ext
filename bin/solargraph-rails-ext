#!/usr/bin/env ruby

require 'bundler'
require 'eventmachine'
require 'json'

def find_constant(namespace, root)
  result = nil
  parts = root.split('::')
  if parts.empty?
    result = inner_find_constant(namespace)
  else
    until parts.empty?
      result = inner_find_constant("#{parts.join('::')}::#{namespace}")
      break unless result.nil?
      parts.pop
    end
  end
  result
end

def inner_find_constant(namespace)
  cursor = Object
  parts = namespace.split('::')
  until parts.empty?
    here = parts.shift
    begin
      cursor = cursor.const_get(here)
    rescue NameError
      return nil
    end
  end
  cursor
end

workspace = ARGV[0]
Dir.chdir workspace
Bundler.with_original_env do
  ENV['BUNDLE_GEMFILE'] = File.join(workspace, 'Gemfile')
  Bundler.reset!
  Bundler.require
  rails_config = File.join(workspace, 'config', 'environment.rb')
  if File.file?(rails_config)
    require_relative(rails_config)
  end
end

module LiveMapServer
  def post_init
  end

  def receive_data data
    parts = data.split(' ')
    result = []
    con = find_constant(parts[1], parts[2].to_s)
    unless con.nil?
      if (parts[0] == 'class')
        result.concat con.public_methods
      elsif (parts[0] == 'instance')
        result.concat con.public_instance_methods
      end
    end
    send_data "#{result.to_json}\n"
  end

  def unbind
  end
end

EventMachine.run {
  EventMachine.start_server 'localhost', 80801, LiveMapServer
}
